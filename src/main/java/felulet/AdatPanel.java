/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package felulet;

import alaposztalyok.AutoT;
import alaposztalyok.Global;
import alaposztalyok.Jatekos;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import vezerlo.Vezerlo;

/**
 *
 * @author kunec
 */
public class AdatPanel extends javax.swing.JPanel {

    /**
     *
     */
    private static final long serialVersionUID = 1L;
    private Vezerlo vezerlo;
    private List<AutoT> autok1 = new ArrayList<>();
    private Jatekos jatekos;
    private int autoIndexe;
    private Image kep = new ImageIcon(this.getClass().getResource("/kepek/garage.jpg")).getImage();
    private Image paletta = new ImageIcon(this.getClass().getResource("/kepek/palette.png")).getImage();
    private Image xp_alap = new ImageIcon(this.getClass().getResource("/kepek/xp_alap.jpg")).getImage();
    private Image xp_szin = new ImageIcon(this.getClass().getResource("/kepek/xp_szin.jpg")).getImage();

    public AdatPanel() {
        initComponents();
        this.setVisible(false);
        this.setSize(Global.JATEK_FELULET_SZELESSEG, Global.JATEK_FELULET_MAGASSAG);
        boltGomb1.addMouseListener(boltGomb1);
        kovetkezoGomb1.addMouseListener(kovetkezoGomb1);
        elozoGomb1.addMouseListener(elozoGomb1);
        playGomb1.addMouseListener(playGomb1);
        mentesGomb1.addMouseListener(mentesGomb1);
    }

    public void setVezerlo(Vezerlo vezerlo) {
        this.vezerlo = vezerlo;
    }

    /**
     * az xp csík, a pletta és a háttér kirajzolásáért felelős
     *
     * @param g
     */
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        int palettakx = 550;
        int palettaky = 195;
        int xpkx = 250;
        int xpky = 15;
        int xpalapSzelesseg = 100;
        g.drawImage(kep, 0, 0, this.getWidth(), this.getHeight(), null);
        g.drawImage(paletta, palettakx, palettaky, paletta.getWidth(null), paletta.getHeight(null), null);
        g.drawImage(xp_alap, xpkx, xpky, xpalapSzelesseg, xp_alap.getHeight(null), null);
        g.drawImage(xp_szin, xpkx, xpky, jatekos.getXp() / 10, xp_szin.getHeight(null), null);
        logotRajzol(g);
        rajzol(g);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAdatok = new javax.swing.JLabel();
        boltGomb1 = new gombok.BoltGomb();
        elozoGomb1 = new gombok.ElozoGomb();
        playGomb1 = new gombok.PlayGomb();
        mentesGomb1 = new gombok.MentesGomb();
        kovetkezoGomb1 = new gombok.KovetkezoGomb();
        lblTipus = new javax.swing.JLabel();
        lblMarka = new javax.swing.JLabel();
        lblAr = new javax.swing.JLabel();
        lblLoero = new javax.swing.JLabel();
        lblSzint = new javax.swing.JLabel();
        lblAutoSzint = new javax.swing.JLabel();
        lblTomeg = new javax.swing.JLabel();

        setBackground(new java.awt.Color(153, 204, 255));
        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        lblAdatok.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblAdatok.setForeground(new java.awt.Color(255, 255, 255));
        lblAdatok.setText("jLabel1");

        boltGomb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boltGomb1ActionPerformed(evt);
            }
        });

        elozoGomb1.setText("elozoGomb1");
        elozoGomb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elozoGomb1ActionPerformed(evt);
            }
        });

        playGomb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playGomb1ActionPerformed(evt);
            }
        });

        mentesGomb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mentesGomb1ActionPerformed(evt);
            }
        });

        kovetkezoGomb1.setText("kovetkezoGomb1");
        kovetkezoGomb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kovetkezoGomb1ActionPerformed(evt);
            }
        });

        lblTipus.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTipus.setForeground(new java.awt.Color(255, 255, 255));
        lblTipus.setText("jLabel1");

        lblMarka.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblMarka.setForeground(new java.awt.Color(255, 255, 255));
        lblMarka.setText("jLabel1");

        lblAr.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblAr.setForeground(new java.awt.Color(255, 255, 255));
        lblAr.setText("jLabel1");

        lblLoero.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblLoero.setForeground(new java.awt.Color(255, 255, 255));
        lblLoero.setText("jLabel1");

        lblSzint.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblSzint.setForeground(new java.awt.Color(255, 255, 255));
        lblSzint.setText("jLabel1");

        lblAutoSzint.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblAutoSzint.setForeground(new java.awt.Color(255, 255, 255));
        lblAutoSzint.setText("szint");

        lblTomeg.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTomeg.setForeground(new java.awt.Color(255, 255, 255));
        lblTomeg.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(elozoGomb1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(kovetkezoGomb1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAutoSzint, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAr, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblTipus, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLoero, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTomeg, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(83, 83, 83))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblAdatok, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(179, 179, 179)
                        .addComponent(lblSzint)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                        .addComponent(playGomb1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(boltGomb1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(mentesGomb1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblMarka, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(99, 99, 99))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(playGomb1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(boltGomb1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblSzint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAdatok, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mentesGomb1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(159, 159, 159)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblMarka, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTipus, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblLoero, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblAr, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblAutoSzint, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(kovetkezoGomb1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(elozoGomb1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblTomeg, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(127, 127, 127))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded
        autoAdatKiiras();
//        if (autok1.isEmpty()) {
//            kovetkezoGomb1.setEnabled(false);
//        } else {
//            kovetkezoGomb1.setEnabled(true);
//        }
    }//GEN-LAST:event_formAncestorAdded

    private void playGomb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playGomb1ActionPerformed
        if (!autok1.isEmpty()) {
            jatekos.autoValasztaVersenyhez(autok1.get(autoIndexe));
            vezerlo.start(jatekos);

        } else {
            JOptionPane.showMessageDialog(this, "Üres a garázs, elöbb vegyél autót!", "Hiba", 1);
        }
    }//GEN-LAST:event_playGomb1ActionPerformed

    private void boltGomb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boltGomb1ActionPerformed
        vezerlo.boltbaLep(jatekos);
    }//GEN-LAST:event_boltGomb1ActionPerformed

    private void mentesGomb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mentesGomb1ActionPerformed
//        jatekos.autoIdUrites();
//        for (int i = 0; i < autok1.size(); i++) {
//            jatekos.autoIDkeszees(autok1.get(i));
//        }
        vezerlo.mentes(jatekos);
    }//GEN-LAST:event_mentesGomb1ActionPerformed

    private void elozoGomb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elozoGomb1ActionPerformed
        autoIndexe--;
        autoAdatKiiras();
        kovetkezoGomb1.setVisible(true);
        if (autoIndexe < 1) {
            elozoGomb1.setVisible(false);
        }
    }//GEN-LAST:event_elozoGomb1ActionPerformed

    private void kovetkezoGomb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kovetkezoGomb1ActionPerformed
        if (autok1.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Még nincs autód", "Üzenet", 1);
        } else if (autok1.size() == 1) {
            autoIndexe = 0;
            JOptionPane.showMessageDialog(this, "Csak 1 autód van", "Üzenet", 1);
        } else {
            autoIndexe++;
            autoAdatKiiras();
            elozoGomb1.setVisible(true);
            if (autoIndexe == autok1.size() - 1) {
                kovetkezoGomb1.setVisible(false);
            }

        }
    }//GEN-LAST:event_kovetkezoGomb1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private gombok.BoltGomb boltGomb1;
    private gombok.ElozoGomb elozoGomb1;
    private gombok.KovetkezoGomb kovetkezoGomb1;
    private javax.swing.JLabel lblAdatok;
    private javax.swing.JLabel lblAr;
    private javax.swing.JLabel lblAutoSzint;
    private javax.swing.JLabel lblLoero;
    private javax.swing.JLabel lblMarka;
    private javax.swing.JLabel lblSzint;
    private javax.swing.JLabel lblTipus;
    private javax.swing.JLabel lblTomeg;
    private gombok.MentesGomb mentesGomb1;
    private gombok.PlayGomb playGomb1;
    // End of variables declaration//GEN-END:variables
/**
     * beállítja és kirajzolja az éppen aktuális autót
     *
     * @param g
     */
    private void rajzol(Graphics g) {
        String szinKod;
        int ky = 400;
        int kx = 400;
        for (int i = 0; i < autok1.size(); i++) {
            szinKod = String.valueOf(autok1.get(autoIndexe).getSzinKod());
            autok1.get(autoIndexe).setMegadottSzin(Color.decode(szinKod));
            autok1.get(autoIndexe).beallit(kx, ky,
                    autok1.get(autoIndexe).getKocsiMintazatString(),
                    autok1.get(autoIndexe).getKocsiKepDetailString(),
                    autok1.get(autoIndexe).getKocsiFekString(),
                    autok1.get(autoIndexe).getKocsiKerekString(),
                    /* autok1.get(autoIndexe).getKocsiMintazat().getWidth(null),
                    autok1.get(autoIndexe).getKocsiMintazat().getHeight(null),*/
                    autok1.get(autoIndexe).getUltetes(),
                    autok1.get(autoIndexe).getHatsoLokharitoTavolsag(),
                    autok1.get(autoIndexe).getKardanTengelyTavolsag(), 1);
            autok1.get(autoIndexe).rajzol(g);
        }
        this.repaint();
    }

    /**
     * az aktuális játékos adatait valamint a panelen lévő autó listának és
     * játékosnak értéket ad
     *
     * @param jatekos
     */
    public void adatAtadas(Jatekos jatekos) {
        lblAdatok.setText(jatekos.getNev() + "     Egyenlege: " + jatekos.getPenz() + " $");
        lblSzint.setText("Level: " + jatekos.getSzint());
        this.autok1 = jatekos.getAutok();
        this.jatekos = jatekos;
    }

    /**
     * kiírja az aktuális autó adatait
     */
    private void autoAdatKiiras() {
        lblMarka.setText("");
        lblTipus.setText("");
        lblAr.setText("");
        lblLoero.setText("");
        lblAutoSzint.setText("");
        lblTomeg.setText("");
        if (!autok1.isEmpty()) {
            lblMarka.setText("" + autok1.get(autoIndexe).getMarka());
            lblTipus.setText("Típus: " + autok1.get(autoIndexe).getTipus());
            lblAr.setText("Értéke: " + autok1.get(autoIndexe).getVetelAr() + " $");
            lblLoero.setText("Lóerő: " + autok1.get(autoIndexe).getLoero());
            lblAutoSzint.setText("Level: " + autok1.get(autoIndexe).getSzint());
            lblTomeg.setText("Tömeg: " + autok1.get(autoIndexe).getTomeg() + " kg");
        }
    }

    /**
     * kirajzolja az aktuális autó márkájának a logóját, figyelembe véve azt
     * hogy kör alakú-e vagy sem
     *
     * @param g
     */
    private void logotRajzol(Graphics g) {
        int kx1;
        int ky1;
        if (!autok1.isEmpty()) {
            for (int i = 0; i < autok1.size(); i++) {
                autok1.get(autoIndexe).logoBeallitas(autok1.get(autoIndexe).getLogoString());
                if (autok1.get(autoIndexe).getLogo().getHeight(null) != autok1.get(autoIndexe).getLogo().getWidth(null)) {
                    kx1 = 207;
                    ky1 = 82;
                } else {
                    kx1 = 220;
                    ky1 = 75;
                }
                g.drawImage(autok1.get(autoIndexe).getLogo(), kx1, ky1, autok1.get(autoIndexe).getLogo().getWidth(null), autok1.get(autoIndexe).getLogo().getHeight(null), null);
            }
        }
    }

}
